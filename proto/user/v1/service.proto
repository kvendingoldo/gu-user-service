syntax = "proto3";
package api.v1;
option go_package = "github.com/kvendingoldo/gu-user-service/gen/go/api/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";



message User {
  int64 id = 1;
  string name = 2;
  double latitude = 3;
  double longitude = 4;
  google.protobuf.Timestamp createdAt = 5;
  google.protobuf.Timestamp UpdatedAt = 6;
}

message GetAllResponse {
  repeated User users = 1;
}

message GetByIDRequest {
  int64 id = 1;
}
message GetByIDResponse {
  User user = 1;
}

message NewRequest {
  User user = 1;
}
message NewResponse {
  int64 id = 1;
}

message UpdateRequest {
  User user = 1;
}
message UpdateResponse {
  int64 id = 1;
}

message DeleteRequest {
  int64 id = 1;
}
message DeleteResponse {
  int64 id = 1;
}

// TODO: should be bidirectional streaming RPC
// example: https://github.com/pahanini/go-grpc-bidirectional-streaming-example
service UserService{
  rpc GetAll(google.protobuf.Empty) returns(GetAllResponse);
  rpc GetByID(GetByIDRequest) returns(GetByIDResponse);
  rpc New(NewRequest) returns(NewResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}
