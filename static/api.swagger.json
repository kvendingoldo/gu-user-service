{
  "swagger": "2.0",
  "info": {
    "title": "kvendingoldo.user_api.v1.UserService in req!!!",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/users": {
      "get": {
        "summary": "Get all users",
        "description": "Get all users on the system.",
        "operationId": "UserService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create new user",
        "description": "Create new user on the system",
        "operationId": "UserService_New",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "user.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.latitude",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "user.longitude",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "user.createdAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "user.UpdatedAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get user",
        "description": "Get user by ID on the system",
        "operationId": "UserService_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete user on the system",
        "operationId": "UserService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1DeleteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetAllResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1GetByIDResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1NewResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1UpdateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "externalDocs": {
    "description": "GU user service",
    "url": "https://github.com/kvendingoldo/gu-user-service"
  }
}
